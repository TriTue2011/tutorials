blueprint:
  name: Voice - Date Lookup and Conversion Tool
  author: VuLQ
  description: |
    # Tool converts Solar date to Lunar date and vice versa using for LLM

    ## Blueprint Setup

    ### Required

    * Pyscript integration must be installed from HACS.

    * Date Conversion Tool script must be installed.

    ### Optional

    * Adjust the prompts for each field used in the script. The descriptions guide
    the LLM to provide the correct input.

    ### Note

    * Give the script a clear description. This will be used by LLM to understand it should
    use this script for date conversion from Solar date to Lunar date and vice versa.

    * Make sure to expose the script to Assist after the script has been saved.

  domain: script
  homeassistant:
    min_version: 2024.10.0
  input:
    prompt_settings:
      name: Prompt settings for the LLM
      icon: mdi:robot
      description:
        You can use these settings to finetune the prompts for your specific
        LLM (model). In most cases the defaults should be fine.
      collapsed: true
      input:
        conversion_type_prompt:
          name: Conversion type prompt
          description:
            The prompt which will be used for the LLM can provide the type for the conversion.
          selector:
            text:
              multiline: true
              multiple: false
          default: >-
            This argument is mandatory and must always be provided!

            It can only be one of the two following values:
            's2l' to convert Solar date to Lunar date,
            'l2s' to convert Lunar date to Solar date.

            After obtaining the result, ensure that your response clearly
            specifies the day of the week, the Solar date, and the Lunar date.
            If the remaining days exceed zero, make sure to include them in your response.
        date_prompt:
          name: Date prompt
          description:
            The prompt which will be used for the LLM can provide the input date for the conversion.
          selector:
            text:
              multiline: true
              multiple: false
          default: >-
            This argument is mandatory and must always be provided!

            Provide the date for the requested conversion. Use the format YYYY-MM-DD.

            Always include the relevant date: today's for today's request,
            tomorrow's for tomorrow's request.

            If the request does not specify a year, it means the current year.

            Vietnamese Lunar calendar terms:
            'Tháng Giêng' means January in the Lunar calendar.
            'Tháng Chạp' means December in the Lunar calendar.
            'Ngày Rằm' means the 15th day of the requested month in the Lunar calendar.
            'Tết Nguyên Đán' means January 1st in the Lunar calendar.
            'Tết Trung Thu' means August 15th in the Lunar calendar.
        leap_month_prompt:
          name: Leap month prompt
          description:
            The prompt which will be used for the LLM can provide the leap month for the conversion.
          selector:
            text:
              multiline: true
              multiple: false
          default: >-
            Use this argument only to convert Lunar dates to Solar dates.

            It can only be one of the two following values:
            'true' for a leap month, 'false' for a normal month.
mode: parallel
max_exceeded: silent
fields:
  conversion_type:
    name: Conversion Type
    description: !input conversion_type_prompt
    selector:
      select:
        options:
          - s2l
          - l2s
    required: true
  date:
    name: Date
    description: !input date_prompt
    selector:
      date:
    required: true
  leap_month:
    name: Leap Month
    description: !input leap_month_prompt
    selector:
      boolean:
sequence:
  - variables:
      conversion_type: "{{ conversion_type | default }}"
      date: "{{ (date | as_datetime(default=now())).date() }}"
      leap_month: "{{ leap_month | default(false) }}"
  - alias: Check if variables were set correctly
    if:
      - condition: template
        value_template: "{{ not (conversion_type in ['s2l', 'l2s']) }}"
    then:
      - alias: Set variable for error message
        variables:
          response:
            error:
              Unable to provide date conversion because parameters were set incorrectly.
      - alias: Stop the script
        stop: Unable to provide date conversion because parameters were set incorrectly.
        response_variable: response
  - action: pyscript.date_conversion_tool
    response_variable: response
    data:
      conversion_type: "{{ conversion_type }}"
      date: "{{ date }}"
      leap_month: "{{ leap_month }}"
  - stop: ""
    response_variable: response
