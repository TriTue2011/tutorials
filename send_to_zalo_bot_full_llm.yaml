blueprint:
  name: Voice - Send to Zalo
  author: VuLQ
  description: >-
    # Tool for sending content to Zalo using LLM

    ## Blueprint Setup

    ### Required

    * Create a Zalo bot if it does not already exist using Zalo Bot Creator.

    * The Pyscript integration needs to be installed through HACS and properly configured.

    * The `scripts/zalo_bot_handle_tool.py` script needs to be copied into the `config/pyscript` folder.

    * The `scripts/requirements.txt` file needs to be copied into the `config/pyscript` folder.

    * A Zalo bot token needs to be configured in `config/configuration.yaml`.

    ```

    #File configuration.yaml

    pyscript:
      allow_all_imports: true
      hass_is_global: true
      zalo_bot_token: !secret zalo_bot_token

    ```

    ```

    #File secrets.yaml

    zalo_bot_token: XXXXXX      # Retrieve the token from the Zalo Bot Creator.

    ```

    ### Optional

    * Using this custom script as an additional tool, along with the Zalo Bot Webhook blueprint, enables smooth two-way communication between the Zalo bot and Home Assistant.

    * Adjust the prompts for each field used in the script. The descriptions guide the LLM to provide the correct input.

    ### Note

    * Provide a concise and precise description for the script. This will be utilized by the LLM to understand it should use this script for sending user requested content to Zalo.

    * Make sure to expose the script to Assist after the script has been saved.

    * Do not alter the default script name.
  domain: script
  homeassistant:
    min_version: 2024.10.0
  input:
    zalo_settings:
      name: Settings for Zalo
      icon: mdi:alpha-z-circle-outline
      description: You can use these settings to configure Zalo for sending the message.
      input:
        chat_id:
          name: Chat ID
          description: The chat ID to send the message to.
          selector:
            text:
    prompt_settings:
      name: Prompt settings for the LLM
      icon: mdi:robot
      description: You can use these settings to finetune the prompts for your specific LLM (model). In most cases the defaults should be fine.
      collapsed: true
      input:
        summary_prompt:
          name: Summary Prompt
          description: The prompt which will be used for the LLM can provide the message summary.
          selector:
            text:
              multiline: true
          default: >-
            This argument is mandatory and must always be provided.

            Provide a brief overview, such as the name of a person, object, or location title.
            No extra commentary, no markdown or emojis.
            Return only the title text.

            When submitting multiple items, make sure each one must be sent separately through a separate tool call.
        detail_prompt:
          name: Detail Prompt
          description: The prompt which will be used for the LLM can provide the message detail.
          selector:
            text:
              multiline: true
          default: >-
            This argument is optional.

            Provide clear and specific details, such as comprehensive information or a detailed description of the subject.
            No links, no markdown/emojis, no additional commentary.
            Return only the detail text.

            When submitting multiple items, make sure each one must be sent separately through a separate tool call.
        content_type_prompt:
          name: Content Type Prompt
          description: The prompt which will be used for the LLM can specify the type of content for the message.
          selector:
            text:
              multiline: true
          default: >-
            This argument is mandatory and must always be provided.

            Return exactly one of the following options: information, location.
            Return only the word, without quotes or extra text.

            Choose location for any place/address/directions/map intent.
            Do not choose information in these cases.

            Otherwise choose information.

            When submitting multiple items, make sure each one must be sent separately through a separate tool call.
        location_prompt:
          name: Location Prompt
          description: The prompt which will be used for the LLM can provide the location for the place.
          selector:
            text:
              multiline: true
          default: >-
            This argument is optional. Use only when content_type is location.

            Return the address of the location. Names only; no commas, prefixes or punctuation; single spaces.

            If content_type = information: leave this blank.

            Return only the value.
mode: queued
max: 30
max_exceeded: silent
fields:
  summary:
    name: Summary
    description: !input summary_prompt
    selector:
      text:
    required: true
  detail:
    name: Detail
    description: !input detail_prompt
    selector:
      text:
  content_type:
    name: Content Type
    description: !input content_type_prompt
    selector:
      select:
        options:
          - information
          - location
    required: true
  location:
    name: Location
    description: !input location_prompt
    selector:
      text:
sequence:
  - variables:
      version: 20250915
      summary: "{{ summary | default('') | trim }}"
      detail: "{{ detail | default('') | trim }}"
      content_type: "{{ content_type | default('') | trim }}"
      location: "{{ location | default('') | trim }}"
  - alias: Check if variables were set correctly
    if:
      - condition: template
        value_template: >-
          {{
            (not summary)
            or (content_type not in ['information', 'location'])
            or (content_type == 'location' and not location)
          }}
    then:
      - alias: Set variable for error message
        variables:
          response:
            error: >-
              Unable to send the message to Zalo because one or more
              inputs are missing or invalid (summary, content_type, or location).
      - alias: Stop the script
        stop: Unable to send the message to Zalo due to invalid inputs.
        response_variable: response
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ content_type == 'information' }}"
        sequence:
          - action: pyscript.send_zalo_message
            data:
              chat_id: !input chat_id
              message: >-
                {{ summary }}


                {{ detail }}


                {% set query = summary.split() | join('+') -%}
                {% set url = 'https://www.google.com/search?q=' ~ query -%}
                Google Search ({{ url }})
            response_variable: zalo_response
      - conditions:
          - condition: template
            value_template: "{{ content_type == 'location' }}"
        sequence:
          - action: pyscript.send_zalo_message
            data:
              chat_id: !input chat_id
              message: >-
                {{ summary }}


                {{ detail }}


                {% set place = (summary ~ ' ' ~ location).split() | join('+') -%}
                {% set url = 'https://www.google.com/maps/search/?api=1&query=' ~ place -%}
                Google Maps ({{ url }})
            response_variable: zalo_response
  - stop: ""
    response_variable: zalo_response
